{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample swagger for Fiber",
        "title": "My Fucking Swaggah Jagahh.",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/": {
            "post": {
                "description": "GetInstiFees Not done",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GetFees"
                ],
                "summary": "GetInstiFees Not done",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.FeeStructureRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.FeeStructure"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/GetBugReports": {
            "post": {
                "description": "GetBugReports",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BugReport"
                ],
                "summary": "GetBugReports",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GetReports"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BugReport"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/SendBugReport": {
            "post": {
                "description": "Send But Report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BugReport"
                ],
                "summary": "Send Bug Report",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SendBugReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BugReport"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/ServerDate": {
            "get": {
                "description": "Get Server Date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServerTime"
                ],
                "summary": "Get Server Date",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/ServerTimestamp": {
            "get": {
                "description": "Get Server Timestamp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServerTime"
                ],
                "summary": "Get Server Timestamp",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/deleteSavedAccount": {
            "delete": {
                "description": "DeleteSavedAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SavedAccount"
                ],
                "summary": "DeleteSavedAccount",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DeletePreferredAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/getAllAtm": {
            "get": {
                "description": "Get Atm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GetAtm"
                ],
                "summary": "Get Atm",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetAtm"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/getAllFees": {
            "get": {
                "description": "Get All Fees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GetFees"
                ],
                "summary": "Get All Fees",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.FeeStructure"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/getInstiAtm": {
            "post": {
                "description": "Get Insti Atm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GetAtm"
                ],
                "summary": "Get Insti Atm",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GetAtmByInsti"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetAtm"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/getSavedAccountbyCid": {
            "post": {
                "description": "GetSavedAccountbyCid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SavedAccount"
                ],
                "summary": "GetSavedAccountbyCid",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GetSaveAcc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PreferredFT"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/getSavedAccountbyCidAndtargetCid": {
            "post": {
                "description": "GetSavedAccount by Cid and target Cid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SavedAccount"
                ],
                "summary": "GetSavedAccount by Cid and target Cid",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GetSaveAccAndTCid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PreferredFT"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/getSpecifiedFee": {
            "post": {
                "description": "GetSpecifiedFee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GetFees"
                ],
                "summary": "GetSpecifiedFee",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.FeeStructureRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.FeeStructure"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/janus/OpenPaymentTransaction/": {
            "post": {
                "description": "/CoreAccounts/API/OpenPaymentTransaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Janus"
                ],
                "summary": "/CoreAccounts/API/OpenPaymentTransaction",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/route.OpenPaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.OpenPaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Errror"
                        }
                    }
                }
            }
        },
        "/janus/custSavingInfoJanus/": {
            "post": {
                "description": "/CoreAccounts/API/custSavingInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Janus"
                ],
                "summary": "/CoreAccounts/API/custSavingInfo",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/route.Acc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.CustSavingInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Errror"
                        }
                    }
                }
            }
        },
        "/janus/customerSavings/": {
            "post": {
                "description": "/CoreAccounts/API/custSavingsList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Janus"
                ],
                "summary": "/CoreAccounts/API/custSavingsList",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/route.Use"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.CustSavingsListss"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Errror"
                        }
                    }
                }
            }
        },
        "/janus/generateCol/": {
            "post": {
                "description": "CoreAccounts/API/generateColShtperCID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Janus"
                ],
                "summary": "CoreAccounts/API/generateColShtperCID",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/route.Use"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.GenerateCol"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Errror"
                        }
                    }
                }
            }
        },
        "/janus/loanInfoJanus/": {
            "post": {
                "description": "/CoreAccounts/API/LoanInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Janus"
                ],
                "summary": "/CoreAccounts/API/LoanInfo",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/route.Acc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.LaonInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Errror"
                        }
                    }
                }
            }
        },
        "/janus/loanlist/": {
            "post": {
                "description": "/CoreAccounts/API/searchLoanList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Janus"
                ],
                "summary": "/CoreAccounts/API/searchLoanList",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/route.Use"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.LoanList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Errror"
                        }
                    }
                }
            }
        },
        "/janus/multiplePayment/": {
            "post": {
                "description": "/CoreMFS/API/multiplePayment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Janus"
                ],
                "summary": "/CoreMFS/API/multiplePayment",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/route.MultiplePaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.MultiplePaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Errror"
                        }
                    }
                }
            }
        },
        "/janus/searchCID/": {
            "post": {
                "description": "CoreAccounts/API/mobile/api/v1/SearchCustomerCID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Janus"
                ],
                "summary": "CoreAccounts/API/mobile/api/v1/SearchCustomerCID",
                "parameters": [
                    {
                        "description": "SearchbyCid",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/route.Use"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.JsonStruct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Errror"
                        }
                    }
                }
            }
        },
        "/updateBugreport": {
            "post": {
                "description": "Update Bug Report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BugReport"
                ],
                "summary": "Update Bug Report",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateBugreports"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BugReportResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/updateSavedAccount": {
            "post": {
                "description": "Fields are optional except cid and target cid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SavedAccount"
                ],
                "summary": "UpdateSavedAccount",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PreferredFT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PreferredFT"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/webtoolParams": {
            "get": {
                "description": "Get WebTool Parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GetWebToolParams"
                ],
                "summary": "Get WebTool Parameters",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetparamWebtools"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.BugReport": {
            "type": "object",
            "properties": {
                "application_code": {
                    "type": "integer"
                },
                "cid": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "insti_code": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "model.BugReportResponses": {
            "type": "object",
            "properties": {
                "application_code": {
                    "type": "integer"
                },
                "cid": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "insti_code": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "model.DeletePreferredAccount": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "string"
                },
                "target_cid": {
                    "type": "string"
                }
            }
        },
        "model.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "retcode": {
                    "type": "integer"
                }
            }
        },
        "model.FeeStructure": {
            "type": "object",
            "properties": {
                "agent_income": {
                    "type": "number"
                },
                "agent_target_income": {
                    "type": "number"
                },
                "bancnet_income": {
                    "type": "number"
                },
                "bank_income": {
                    "type": "number"
                },
                "bank_income_flag": {
                    "type": "boolean"
                },
                "client_type": {
                    "type": "string"
                },
                "cmit_fee": {
                    "type": "number"
                },
                "created_by": {
                    "type": "integer"
                },
                "created_date": {
                    "type": "string"
                },
                "end_range": {
                    "type": "integer"
                },
                "fds_fee": {
                    "type": "number"
                },
                "fee_id": {
                    "type": "integer"
                },
                "last_updated_by": {
                    "type": "integer"
                },
                "last_updated_date": {
                    "type": "string"
                },
                "start_range": {
                    "type": "integer"
                },
                "telco_fee": {
                    "type": "number"
                },
                "total_charge": {
                    "type": "number"
                },
                "trans_type": {
                    "type": "string"
                }
            }
        },
        "model.FeeStructureRequest": {
            "type": "object",
            "properties": {
                "fee_id": {
                    "type": "integer"
                }
            }
        },
        "model.GetAtm": {
            "type": "object",
            "properties": {
                "atm_address": {
                    "type": "string"
                },
                "atm_city": {
                    "type": "string"
                },
                "atm_description": {
                    "type": "string"
                },
                "atm_id": {
                    "type": "integer"
                },
                "atm_latitude": {
                    "type": "number"
                },
                "atm_longitude": {
                    "type": "number"
                },
                "atm_type": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "created_date": {
                    "type": "string"
                },
                "inst_code": {
                    "type": "string"
                },
                "last_updated_by": {
                    "type": "integer"
                },
                "last_updated_date": {
                    "type": "string"
                }
            }
        },
        "model.GetAtmByInsti": {
            "type": "object",
            "properties": {
                "inst_code": {
                    "type": "string"
                }
            }
        },
        "model.GetReports": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "model.GetSaveAcc": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "string"
                }
            }
        },
        "model.GetSaveAccAndTCid": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "string"
                },
                "target_cid": {
                    "type": "string"
                }
            }
        },
        "model.GetparamWebtools": {
            "type": "object",
            "properties": {
                "app_type": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "created_date": {},
                "last_updated_by": {},
                "last_updated_date": {},
                "param_desc": {
                    "type": "string"
                },
                "param_id": {
                    "type": "integer"
                },
                "param_name": {
                    "type": "string"
                },
                "param_status": {
                    "type": "string"
                },
                "param_value": {
                    "type": "string"
                },
                "process_id": {},
                "value_lookup": {},
                "value_type": {
                    "type": "string"
                }
            }
        },
        "model.PreferredFT": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "account_type": {
                    "type": "string"
                },
                "cid": {
                    "type": "string"
                },
                "date_added": {
                    "type": "string"
                },
                "insti": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "target_cid": {
                    "type": "string"
                }
            }
        },
        "model.SendBugReport": {
            "type": "object",
            "properties": {
                "application_code": {
                    "type": "integer"
                },
                "cid": {
                    "type": "integer"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "insti_code": {
                    "type": "integer"
                }
            }
        },
        "model.UpdateBugreports": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "route.Acc": {
            "type": "object",
            "properties": {
                "acc": {
                    "type": "string"
                }
            }
        },
        "route.AmortList": {
            "type": "object",
            "properties": {
                "acc": {
                    "type": "string"
                },
                "carVal": {
                    "type": "number"
                },
                "dnum": {
                    "type": "integer"
                },
                "dueDate": {
                    "type": "string"
                },
                "endBal": {
                    "type": "number"
                },
                "endInt": {
                    "type": "number"
                },
                "endOth": {
                    "type": "number"
                },
                "instFlag": {
                    "type": "integer"
                },
                "instPd": {
                    "type": "number"
                },
                "intr": {
                    "type": "number"
                },
                "oth": {
                    "type": "number"
                },
                "penPd": {
                    "type": "number"
                },
                "penalty": {
                    "type": "number"
                },
                "pledgeAmort": {
                    "type": "number"
                },
                "prin": {
                    "type": "number"
                },
                "servFee": {
                    "type": "number"
                },
                "upInt": {
                    "type": "number"
                }
            }
        },
        "route.CustSavingInfo": {
            "type": "object",
            "properties": {
                "acc": {},
                "accDesc": {
                    "type": "string"
                },
                "acctType": {
                    "type": "integer"
                },
                "appType": {
                    "type": "integer"
                },
                "balance": {
                    "type": "number"
                },
                "cid": {
                    "type": "integer"
                },
                "classificationCode": {
                    "type": "integer"
                },
                "classificationType": {
                    "type": "integer"
                },
                "dopen": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "route.CustSavingsListss": {
            "type": "object",
            "properties": {
                "acc": {
                    "type": "string"
                },
                "accDesc": {
                    "type": "string"
                },
                "acctType": {
                    "type": "integer"
                },
                "balance": {
                    "type": "number"
                },
                "cid": {
                    "type": "integer"
                },
                "dopen": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "statusDesc": {
                    "type": "string"
                }
            }
        },
        "route.Details": {
            "type": "object",
            "properties": {
                "coreReference": {
                    "type": "string"
                },
                "customerName": {
                    "type": "string"
                },
                "customerNumber": {
                    "type": "string"
                },
                "paidDate": {},
                "referenceNumber": {
                    "type": "string"
                },
                "sourceAccountNumber": {},
                "sourceId": {},
                "transactionAmount": {
                    "type": "number"
                }
            }
        },
        "route.Errror": {
            "type": "object",
            "properties": {
                "errormessage": {
                    "type": "string"
                }
            }
        },
        "route.GenerateCol": {
            "type": "object",
            "properties": {
                "acc": {
                    "type": "string"
                },
                "acctDesc": {
                    "type": "string"
                },
                "accttype": {
                    "type": "integer"
                },
                "amort": {
                    "type": "number"
                },
                "appType": {
                    "type": "integer"
                },
                "area": {
                    "type": "string"
                },
                "areaCode": {
                    "type": "integer"
                },
                "balInt": {
                    "type": "number"
                },
                "balPrin": {
                    "type": "number"
                },
                "centerCode": {
                    "type": "integer"
                },
                "centerName": {
                    "type": "string"
                },
                "classDesc": {
                    "type": "string"
                },
                "classification": {
                    "type": "integer"
                },
                "clientName": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "dateStart": {
                    "type": "string"
                },
                "disbdate": {
                    "type": "string"
                },
                "dueInt": {
                    "type": "number"
                },
                "duePrin": {
                    "type": "number"
                },
                "gives": {
                    "type": "integer"
                },
                "ibalInt": {
                    "type": "number"
                },
                "ibalPrin": {
                    "type": "number"
                },
                "iiid": {
                    "type": "integer"
                },
                "interest": {
                    "type": "number"
                },
                "loanBal": {
                    "type": "number"
                },
                "manCode": {
                    "type": "integer"
                },
                "maturity": {
                    "type": "string"
                },
                "pay": {
                    "type": "number"
                },
                "principal": {
                    "type": "number"
                },
                "saveBal": {
                    "type": "number"
                },
                "staffName": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "statusDesc": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "um": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                },
                "unpaidCtr": {
                    "type": "integer"
                },
                "uuid": {},
                "waiveInt": {
                    "type": "number"
                },
                "withdraw": {
                    "type": "number"
                },
                "writeoff": {
                    "type": "integer"
                },
                "writtenoff": {
                    "type": "integer"
                }
            }
        },
        "route.JsonStruct": {
            "type": "object",
            "properties": {
                "accountNumber": {
                    "type": "string"
                },
                "address": {},
                "birthPlace": {
                    "type": "string"
                },
                "brCode": {
                    "type": "integer"
                },
                "business": {
                    "type": "integer"
                },
                "centerCode": {
                    "type": "integer"
                },
                "centerName": {},
                "cid": {
                    "type": "integer"
                },
                "civilStatus": {
                    "type": "integer"
                },
                "classification": {
                    "type": "integer"
                },
                "contact": {},
                "doBirth": {
                    "type": "string"
                },
                "doEntry": {
                    "type": "string"
                },
                "doRecognized": {
                    "type": "string"
                },
                "doResigned": {
                    "type": "string"
                },
                "dosri": {
                    "type": "integer"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "maidenFname": {
                    "type": "string"
                },
                "maidenLName": {
                    "type": "string"
                },
                "maidenMName": {
                    "type": "string"
                },
                "memberMaidenFName": {
                    "type": "string"
                },
                "memberMaidenLName": {
                    "type": "string"
                },
                "memberMaidenMName": {
                    "type": "string"
                },
                "middlename": {
                    "type": "string"
                },
                "reffered": {
                    "type": "string"
                },
                "remarks": {
                    "type": "string"
                },
                "searchName": {},
                "sex": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "subClassification": {
                    "type": "integer"
                },
                "title": {
                    "type": "integer"
                },
                "unitCode": {
                    "type": "integer"
                },
                "unitName": {}
            }
        },
        "route.LaonInfo": {
            "type": "object",
            "properties": {
                "acc": {
                    "type": "string"
                },
                "accDesc": {
                    "type": "string"
                },
                "acctType": {
                    "type": "integer"
                },
                "amort": {},
                "amortList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/route.AmortList"
                    }
                },
                "amortcond": {
                    "type": "integer"
                },
                "amortcondvalue": {
                    "type": "number"
                },
                "annumdiv": {
                    "type": "integer"
                },
                "appType": {
                    "type": "integer"
                },
                "approvby": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                },
                "charges": {},
                "cid": {
                    "type": "integer"
                },
                "classification_code": {
                    "type": "integer"
                },
                "classification_type": {
                    "type": "integer"
                },
                "conintrate": {
                    "type": "number"
                },
                "cycle": {
                    "type": "integer"
                },
                "disbby": {
                    "type": "string"
                },
                "discounted": {
                    "type": "number"
                },
                "domaturity": {
                    "type": "string"
                },
                "dopen": {
                    "type": "string"
                },
                "frequency": {
                    "type": "integer"
                },
                "fundsource": {
                    "type": "integer"
                },
                "interest": {
                    "type": "number"
                },
                "intr": {
                    "type": "number"
                },
                "isLumpsum": {
                    "type": "integer"
                },
                "lngrpcode": {
                    "type": "integer"
                },
                "loanID": {},
                "netproceed": {
                    "type": "number"
                },
                "oth": {
                    "type": "number"
                },
                "others": {
                    "type": "number"
                },
                "penalty": {
                    "type": "number"
                },
                "prin": {
                    "type": "number"
                },
                "principal": {
                    "type": "number"
                },
                "proff": {
                    "type": "integer"
                },
                "remarks": {},
                "status": {
                    "type": "integer"
                },
                "term": {
                    "type": "integer"
                },
                "waivedint": {
                    "type": "number"
                },
                "weekspaid": {
                    "type": "integer"
                }
            }
        },
        "route.LoanList": {
            "type": "object",
            "properties": {
                "acc": {
                    "type": "string"
                },
                "acctType": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                },
                "dateRelease": {
                    "type": "string"
                },
                "interest": {
                    "type": "number"
                },
                "oth": {
                    "type": "number"
                },
                "paidTerm": {
                    "type": "integer"
                },
                "principal": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "term": {
                    "type": "integer"
                }
            }
        },
        "route.MultiplePaymentRequest": {
            "type": "object",
            "properties": {
                "orNumber": {
                    "type": "integer"
                },
                "particulars": {
                    "type": "string"
                },
                "payment": {},
                "prNumber": {
                    "type": "string"
                },
                "remitterCID": {
                    "type": "string"
                },
                "sourceId": {
                    "type": "integer"
                },
                "totalCollection": {
                    "type": "integer"
                },
                "trndate": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "route.MultiplePaymentResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "retcode": {
                    "type": "integer"
                }
            }
        },
        "route.OpenPaymentRequest": {
            "type": "object",
            "properties": {
                "accountNumber": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "particulars": {
                    "type": "string"
                },
                "sourceSaveAcc": {
                    "type": "string"
                },
                "transFee": {
                    "type": "integer"
                },
                "transFeeParticulars": {
                    "type": "string"
                },
                "trnReference": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "route.OpenPaymentResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/route.Details"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "route.Use": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "example": 9
                }
            }
        }
    }
}